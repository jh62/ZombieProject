[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "/*
	CRT shader for Godot Engine by Yui Kinomoto @arlez80
*/
shader_type canvas_item;
render_mode blend_add;

uniform float white_noise_rate : hint_range( 0.0, 1.0 ) = 0.0;
uniform float noise_alpha : hint_range( 0.0, 0.1 ) = 0.027;

float random( vec2 pos )
{ 
	return fract(sin(dot(pos, vec2(12.9898,78.233))) * 43758.5453);
}

void fragment( )
{
	vec2 fixed_uv = SCREEN_UV;
	vec2 aperture_grille_pixel = vec2( floor( ( fixed_uv.x / SCREEN_PIXEL_SIZE.x ) / 1.0 ) * 1.0, fixed_uv.y );
	
	// 白色ノイズ
	float white_noise = random( aperture_grille_pixel + vec2( sin( TIME * 0.543254 ), cos( TIME * 0.254323563 ) ) );
	COLOR.rgb = mix(
		COLOR.rgb
	,	vec3( white_noise, white_noise, white_noise )
	,	white_noise_rate
	);
	COLOR.a = noise_alpha;
}"

[resource]
shader = SubResource( 1 )
shader_param/white_noise_rate = 1.0
shader_param/noise_alpha = 0.027
