[gd_scene load_steps=43 format=2]

[ext_resource path="res://scenes/UI/SplashScreen/SplashScreen.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/UI/Menus/TitleScreen/TitleScreen.gd" type="Script" id=2]
[ext_resource path="res://assets/ui/bg/tbg1.tres" type="Texture" id=3]
[ext_resource path="res://assets/ui/ui_spritesheet.png" type="Texture" id=4]
[ext_resource path="res://assets/ui/title.tres" type="Texture" id=5]
[ext_resource path="res://assets/ui/ui_theme.tres" type="Theme" id=6]
[ext_resource path="res://assets/ui/fonts/font_small.tres" type="DynamicFont" id=7]
[ext_resource path="res://assets/music/main_song.mp3" type="AudioStream" id=9]
[ext_resource path="res://scenes/UI/Menus/TitleScreen/MainMenu.gd" type="Script" id=10]
[ext_resource path="res://scenes/UI/Menus/TitleScreen/OptionsMenu.gd" type="Script" id=11]
[ext_resource path="res://assets/ui/bg/tbg6.tres" type="Texture" id=12]
[ext_resource path="res://assets/ui/bg/tbg3.tres" type="Texture" id=14]
[ext_resource path="res://assets/ui/bg/tbg5.tres" type="Texture" id=15]
[ext_resource path="res://assets/ui/bg/tbg4.tres" type="Texture" id=16]

[sub_resource type="GDScript" id=3]
script/source = "extends Label

func _ready():
	hint_tooltip = \"Affects the number of zombies,\"
	hint_tooltip += \"\\n\"
	hint_tooltip += \"your max health and the\"
	hint_tooltip += \"\\n\"
	hint_tooltip += \"recurrence of some guns and items.\"

"

[sub_resource type="GDScript" id=2]
script/source = "extends OptionButton

func _ready():
	add_item(\"Easy\") #0
	add_item(\"Normal\") #1
	add_item(\"Hard\") #2
	selected = 1

func _unhandled_input(event):
	if !has_focus():
		return
"

[sub_resource type="GDScript" id=4]
script/source = "extends Label

func _ready():
	hint_tooltip = \"Discards the bullets left\\non the magazine when you reload.\"
"

[sub_resource type="GDScript" id=5]
script/source = "extends Label

func _ready():
	hint_tooltip = \"Pick up weapons when you step on them.\"

"

[sub_resource type="GDScript" id=6]
script/source = "extends Label

func _ready():
	hint_tooltip = \"You only get one life. If you die, game's over.\"

"

[sub_resource type="GDScript" id=9]
script/source = "extends Label

func _ready():
	hint_tooltip = \"Enable joystick input.\"

"

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0.0431373, 0.0431373, 0.0431373, 1 )

[sub_resource type="GDScript" id=7]
script/source = "extends AudioStreamPlayer

const ui_sound_click := preload(\"res://assets/sfx/ui/ui_click.wav\")
const ui_sound_cancel := preload(\"res://assets/sfx/ui/ui_cancel.wav\")
const ui_sound_confirm := preload(\"res://assets/sfx/ui/ui_confirm.wav\")
const ui_sound_over := preload(\"res://assets/sfx/ui/ui_over.wav\")
const ui_sound_slide := preload(\"res://assets/sfx/ui/ui_slide.wav\")

const ui_player_footsteps := preload(\"res://assets/sfx/footsteps/player/footstep_cement_1.wav\")

const ui_zombie_footsteps := preload(\"res://assets/sfx/footsteps/zombie/footstep_grass_z_1.wav\")

onready var music_p : AudioStreamPlayer = get_tree().current_scene.get_node(\"MusicMenu\")
onready var audio_p : AudioStreamPlayer = get_tree().current_scene.get_node(\"SoundUI\")
onready var audio_sliders_p : AudioStreamPlayer = get_tree().current_scene.get_node(\"SoundSliders\")

func _ready():
	for n in get_tree().get_nodes_in_group(\"ui_mouse_entered\"):
		var button := n as Button
		button.connect(\"mouse_entered\", self, \"_ui_mouse_entered\")

	for n in get_tree().get_nodes_in_group(\"ui_button\"):
		var button := n as Button
		button.connect(\"button_up\", self, \"_on_ui_button_up\")

	for n in get_tree().get_nodes_in_group(\"ui_checkbox\"):
		var button := n as CheckBox
		button.connect(\"button_up\", self, \"_on_ui_button_up\")

#	for n in get_tree().get_nodes_in_group(\"ui_slider\"):
#		var button := n as Slider
#		button.connect(\"value_changed\", self, \"_on_slider_value_changed\")

func _ui_mouse_entered() -> void:
	audio_p.stream = ui_sound_over
	audio_p.play()

func _on_ui_button_up() -> void:
	audio_p.stream = ui_sound_click
	audio_p.play()

func _on_ButtonSave_button_up():
	audio_p.stream = ui_sound_confirm
	audio_p.play()

func _on_ButtonCancel_button_up():
	audio_p.stream = ui_sound_cancel
	audio_p.play()

func _on_TabContainer_tab_changed(tab):
	_on_ui_button_up()

var slide_delay := 0.0

func _on_slider_value_changed(value):
	var now := OS.get_ticks_msec()

	if now - slide_delay < 50:
		return

	slide_delay = now
	audio_p.stream = ui_sound_slide
	audio_p.play()

func _on_OptionsDifficulty_item_selected(index):
	_on_ui_button_up()

func _on_SliderMusic_value_changed(value):
	if value < 0:
		value *= 2
	if value <= -20:
		value = -100

	music_p.volume_db = value

	if !slider_delay():
		return

	audio_sliders_p.volume_db = audio_p.volume_db
	audio_sliders_p.stream = ui_sound_slide
	audio_sliders_p.play()

func _on_SliderSound_value_changed(value):
	if value < 0:
		value *= 2
	if value <= -20:
		value = -100

	audio_p.volume_db = value

	if !slider_delay():
		return

	audio_sliders_p.volume_db = value + audio_p.volume_db
	audio_sliders_p.stream = ui_sound_slide
	audio_sliders_p.play()

func _on_SliderPlayerFootsteps_value_changed(value):
	if value < 0:
		value *= 2
	if value <= -20:
		value = -100

	audio_sliders_p.volume_db = value + audio_p.volume_db

	if !slider_delay():
		return

	audio_sliders_p.stream = ui_player_footsteps
	audio_sliders_p.play()

func _on_SliderZombieFootsteps_value_changed(value):
	if value < 0:
		value *= 2
	if value <= -20:
		value = -100

	audio_sliders_p.volume_db = value + audio_p.volume_db

	if !slider_delay(150):
		return

	audio_sliders_p.stream = ui_zombie_footsteps
	audio_sliders_p.play()

func slider_delay(delay := 50) -> bool:
	var now := OS.get_ticks_msec()

	if now - slide_delay < delay:
		return false

	slide_delay = now
	return true
"

[sub_resource type="Shader" id=27]
code = "/*
	Glitch Effect Shader by Yui Kinomoto @arlez80

	MIT License
*/

shader_type canvas_item;

// 振動の強さ
uniform float shake_power = 0.03;
// 振動率
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
// 振動速度
uniform float shake_speed = 5.0;
// 振動ブロックサイズ
uniform float shake_block_size = 30.5;
// 色の分離率
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
	float enable_shift = float(
		random( trunc( TIME * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = SCREEN_UV;
	fixed_uv.x += (
		random(
			( trunc( SCREEN_UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = textureLod( SCREEN_TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(
		pixel_color.r
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b
	,	enable_shift
	);
	COLOR = pixel_color;
}
"

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 27 )
shader_param/shake_power = 100.0
shader_param/shake_rate = 0.001
shader_param/shake_speed = 5.0
shader_param/shake_block_size = 200.0
shader_param/shake_color_rate = 1.0

[sub_resource type="Shader" id=25]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float screen_height = 640.0;
uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	
}"

[sub_resource type="ShaderMaterial" id=26]
shader = SubResource( 25 )
shader_param/screen_height = 1129.0
shader_param/amplitude = 0.003
shader_param/frequency = 20.0
shader_param/speed = 0.5
shader_param/amplitude_vertical = 0.0
shader_param/frequency_vertical = 0.0
shader_param/speed_vertical = 0.0
shader_param/scroll_direction = Vector2( 0, 0 )
shader_param/scrolling_speed = 0.08
shader_param/enable_palette_cycling = false
shader_param/palette_speed = 0.1

[sub_resource type="Shader" id=30]
code = "shader_type canvas_item;

uniform vec2 frame_coords = vec2(0.0,0.0);
uniform vec2 nb_frames = vec2(0.0,0.0);
uniform vec2 velocity = vec2(0.0,0.0);
uniform float velocity_max = 300.0;
uniform float trail_size = 6.0;
uniform float alpha_start = 0.8;
uniform float alpha_tail = 0.2;
uniform float alpha_factor = 1.2;
uniform float noise_margin = 0.68;
uniform sampler2D noise;


vec2 get_mid_uv(vec2 coords, vec2 px_size) {
	// récupérer les UV des milieux de ces px en partant du dernier
	float px_mid_x = 1.0 - px_size.x / 2.0;
	float px_mid_y = 1.0 - px_size.y / 2.0;
	if (coords.x < 1.0)
		px_mid_x = px_size.x * ( floor(coords.x / px_size.x) + 1.0 / 2.0 );
	if (coords.y < 1.0)
		px_mid_y = px_size.y * ( floor(coords.y / px_size.y) + 1.0 / 2.0 ); 
	return vec2(px_mid_x, px_mid_y);
}

void fragment() {
	COLOR = texture(TEXTURE,UV);

	float UV_X = (UV.x * nb_frames.x - frame_coords.x);
	float UV_Y = (UV.y * nb_frames.y - frame_coords.y);
	vec2 uv = vec2(UV_X, UV_Y);
	
	// Limite velocity à trail_size pixels max 
	vec2 v_dir = normalize(velocity);
	float v_length = length(velocity) * trail_size / velocity_max;
	
	float alpha_step = (alpha_start - alpha_tail) / trail_size;
	float alpha = alpha_tail;
	while (v_length > 0.0) {
		vec2 velo = v_length * v_dir * TEXTURE_PIXEL_SIZE;
		vec2 px_mid_uv = get_mid_uv(UV, TEXTURE_PIXEL_SIZE) + velo;
		float noiseValue = texture(noise, px_mid_uv).r;
		vec4 new_color = texture(TEXTURE, px_mid_uv);
		if (noiseValue > noise_margin && new_color.a > 0.0) {
			if (COLOR.a == 0.0) {
				COLOR = new_color;
				COLOR.a = new_color.a * alpha;
			}
			break;
		}
		v_length -= 0.5;
		alpha *= alpha_factor;
		alpha = min(alpha,alpha_start);
	}
}"

[sub_resource type="ShaderMaterial" id=31]
shader = SubResource( 30 )
shader_param/frame_coords = Vector2( 0.425, 0.223 )
shader_param/nb_frames = Vector2( 0.187, 0.203 )
shader_param/velocity = Vector2( 0.693, 0 )
shader_param/velocity_max = 299.793
shader_param/trail_size = 6.302
shader_param/alpha_start = 1.199
shader_param/alpha_tail = 0.2
shader_param/alpha_factor = 1.2
shader_param/noise_margin = 0.68

[sub_resource type="StyleBoxEmpty" id=8]

[sub_resource type="Animation" id=10]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ActiveMenu/OptionsMenu:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ActiveMenu/MainMenu:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ActiveMenu/MainMenu:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ActiveMenu/OptionsMenu:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/Graphics/TitleLogo:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("CanvasLayer/Graphics/Banner:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("CanvasLayer_SplashScreen/SplashScreen:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ActiveMenu/CreditsMenu:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("ActiveMenu/CreditsMenu:self_modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("ActiveMenu/CreditsMenu:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=11]
resource_name = "intro"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("ActiveMenu/OptionsMenu:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ActiveMenu/MainMenu:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ActiveMenu/MainMenu:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.8, 1.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ActiveMenu/OptionsMenu:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer_SplashScreen/SplashScreen:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ActiveMenu/CreditsMenu:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=15]
resource_name = "menu_credits"
tracks/0/type = "value"
tracks/0/path = NodePath("ActiveMenu/MainMenu:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ActiveMenu/OptionsMenu:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ActiveMenu/MainMenu:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CanvasLayer/Graphics/TitleLogo:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/Graphics/Banner:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ActiveMenu/CreditsMenu:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ActiveMenu/CreditsMenu:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=13]
resource_name = "menu_main"
tracks/0/type = "value"
tracks/0/path = NodePath("ActiveMenu/MainMenu:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ActiveMenu/OptionsMenu:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ActiveMenu/OptionsMenu:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ActiveMenu/MainMenu:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/Graphics/TitleLogo:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.196078 ), Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("CanvasLayer/Graphics/Banner:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.196078 ), Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ActiveMenu/CreditsMenu:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ActiveMenu/CreditsMenu:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "menu_options"
tracks/0/type = "value"
tracks/0/path = NodePath("ActiveMenu/MainMenu:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ActiveMenu/OptionsMenu:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ActiveMenu/OptionsMenu:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ActiveMenu/MainMenu:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("CanvasLayer/Graphics/TitleLogo:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.196078 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("CanvasLayer/Graphics/Banner:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.196078 ) ]
}

[sub_resource type="Animation" id=16]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 3 ) ]
}

[sub_resource type="Animation" id=17]
resource_name = "slide_1"
length = 14.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 3 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -96, 48 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 13.861 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_2", -1, 1.0, false ],
"method": "play"
} ]
}

[sub_resource type="AtlasTexture" id=32]
flags = 1
atlas = ExtResource( 4 )
region = Rect2( 320, 480, 320, 180 )

[sub_resource type="Animation" id=18]
resource_name = "slide_2"
length = 14.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ SubResource( 32 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 78, 55 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 13.861 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_3", -1, 1.0, false ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=19]
resource_name = "slide_3"
length = 14.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 14 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -80, 57 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 13.861 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_4", -1, 1.0, false ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=20]
resource_name = "slide_4"
length = 14.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 16 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 40 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 13.861 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_5", -1, 1.0, false ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=21]
resource_name = "slide_5"
length = 14.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 15 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -64, 8 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 13.861 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_6", -1, 1.0, false ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=22]
resource_name = "slide_6"
length = 18.0
step = 0.166667
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer/Graphics/Background:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 7.16668, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/Graphics/Background:texture")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 12 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CanvasLayer/Graphics/Background:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AnimationPlayerBackground")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 18.036 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "slide_1", -1, 1.0, false ],
"method": "play"
} ]
}

[node name="TitleScreen" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 6 )
script = ExtResource( 2 )
parallax_speed = 150.0

[node name="ActiveMenu" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": true
}

[node name="MainMenu" type="MarginContainer" parent="ActiveMenu"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.4
anchor_top = 0.611111
anchor_right = 0.6
anchor_bottom = 1.0
margin_top = 7.62939e-06
script = ExtResource( 10 )
__meta__ = {
"_edit_use_anchors_": true
}

[node name="CenterContainer" type="CenterContainer" parent="ActiveMenu/MainMenu"]
margin_right = 64.0
margin_bottom = 70.0

[node name="VBoxContainer" type="VBoxContainer" parent="ActiveMenu/MainMenu/CenterContainer"]
margin_left = 5.0
margin_top = 6.0
margin_right = 59.0
margin_bottom = 64.0
size_flags_horizontal = 3
custom_constants/separation = 2
alignment = 1

[node name="ButtonNew" type="Button" parent="ActiveMenu/MainMenu/CenterContainer/VBoxContainer" groups=["ui_button", "ui_mouse_entered"]]
margin_right = 54.0
margin_bottom = 13.0
grow_horizontal = 2
focus_neighbour_top = NodePath("../ButtonExit")
focus_neighbour_bottom = NodePath("../ButtonOptions")
text = "NEW GAME"

[node name="ButtonOptions" type="Button" parent="ActiveMenu/MainMenu/CenterContainer/VBoxContainer" groups=["ui_button", "ui_mouse_entered"]]
margin_top = 15.0
margin_right = 54.0
margin_bottom = 28.0
focus_neighbour_top = NodePath("../ButtonNew")
focus_neighbour_bottom = NodePath("../ButtonExit")
text = "OPTIONS"

[node name="ButtonCredits" type="Button" parent="ActiveMenu/MainMenu/CenterContainer/VBoxContainer" groups=["ui_button", "ui_mouse_entered"]]
margin_top = 30.0
margin_right = 54.0
margin_bottom = 43.0
focus_neighbour_top = NodePath("../ButtonOptions")
focus_neighbour_bottom = NodePath("../ButtonNew")
text = "CREDITS"

[node name="ButtonExit" type="Button" parent="ActiveMenu/MainMenu/CenterContainer/VBoxContainer" groups=["ui_button", "ui_mouse_entered"]]
margin_top = 45.0
margin_right = 54.0
margin_bottom = 58.0
focus_neighbour_top = NodePath("../ButtonOptions")
focus_neighbour_bottom = NodePath("../ButtonNew")
text = "QUIT"

[node name="OptionsMenu" type="Control" parent="ActiveMenu"]
visible = false
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TabContainer" type="TabContainer" parent="ActiveMenu/OptionsMenu"]
self_modulate = Color( 1, 1, 1, 0.784314 )
anchor_left = 0.096875
anchor_top = 0.0444444
anchor_right = 0.925
anchor_bottom = 0.816667
margin_bottom = 1.52588e-05
focus_mode = 2
tab_align = 0
__meta__ = {
"_edit_use_anchors_": true
}

[node name="Gameplay" type="Tabs" parent="ActiveMenu/OptionsMenu/TabContainer" groups=["ui_tab"]]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 31.0
margin_right = -4.0
margin_bottom = -4.0
focus_neighbour_bottom = NodePath("Grid/OptionsDifficulty")
focus_mode = 2

[node name="Grid" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
columns = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelDifficulty" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_right = 126.0
margin_bottom = 13.0
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Difficulty"
script = SubResource( 3 )

[node name="OptionsDifficulty" type="OptionButton" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_left = 130.0
margin_right = 256.0
margin_bottom = 13.0
focus_neighbour_top = NodePath("../..")
size_flags_horizontal = 3
toggle_mode = false
align = 1
script = SubResource( 2 )

[node name="LabelRealMags" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_top = 18.0
margin_right = 126.0
margin_bottom = 31.0
mouse_filter = 0
text = "Real magazines"
script = SubResource( 4 )

[node name="CheckBoxRealMags" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid" groups=["ui_checkbox"]]
margin_left = 185.0
margin_top = 17.0
margin_right = 201.0
margin_bottom = 33.0
focus_neighbour_top = NodePath("../OptionsDifficulty")
focus_neighbour_bottom = NodePath("../CheckBoxAutoPickup")
size_flags_horizontal = 4

[node name="LabelAutoPickup" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_top = 38.0
margin_right = 126.0
margin_bottom = 51.0
mouse_filter = 0
text = "Auto pick weapons"
script = SubResource( 5 )

[node name="CheckBoxAutoPickup" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid" groups=["ui_checkbox"]]
margin_left = 185.0
margin_top = 37.0
margin_right = 201.0
margin_bottom = 53.0
focus_neighbour_top = NodePath("../CheckBoxRealMags")
focus_neighbour_bottom = NodePath("../CheckBoxDeathWish")
size_flags_horizontal = 4

[node name="LabelDeathWish" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_top = 58.0
margin_right = 126.0
margin_bottom = 71.0
mouse_filter = 0
text = "Death wish"
script = SubResource( 6 )

[node name="CheckBoxDeathWish" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid" groups=["ui_checkbox"]]
margin_left = 185.0
margin_top = 57.0
margin_right = 201.0
margin_bottom = 73.0
focus_neighbour_top = NodePath("../CheckBoxAutoPickup")
focus_neighbour_bottom = NodePath("../CheckBoxJoypad")
size_flags_horizontal = 4

[node name="LabelJoypad" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid"]
margin_top = 78.0
margin_right = 126.0
margin_bottom = 91.0
mouse_filter = 0
text = "Joystick"
script = SubResource( 9 )

[node name="CheckBoxJoypad" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid" groups=["ui_checkbox"]]
margin_left = 185.0
margin_top = 77.0
margin_right = 201.0
margin_bottom = 93.0
focus_neighbour_top = NodePath("../CheckBoxDeathWish")
focus_neighbour_bottom = NodePath("../../../../HBoxContainer/ButtonSave")
size_flags_horizontal = 4

[node name="Graphics" type="Tabs" parent="ActiveMenu/OptionsMenu/TabContainer" groups=["ui_tab"]]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 31.0
margin_right = -4.0
margin_bottom = -4.0
focus_neighbour_bottom = NodePath("ScrollContainer/VBoxContainer/Option1/CheckBoxRenderBullets")
focus_mode = 2

[node name="ScrollContainer" type="ScrollContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics"]
anchor_right = 1.0
anchor_bottom = 1.0
follow_focus = true
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer"]
margin_right = 257.0
margin_bottom = 136.0
size_flags_horizontal = 3
__meta__ = {
"_edit_use_anchors_": true
}

[node name="Option1" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_right = 245.0
margin_bottom = 16.0
columns = 2

[node name="LabelRenderBullets" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option1"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Show or hide bullets."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Render bullets"

[node name="CheckBoxRenderBullets" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option1" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
focus_neighbour_top = NodePath("../../../..")
size_flags_horizontal = 6
pressed = true

[node name="Option2" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 20.0
margin_right = 245.0
margin_bottom = 36.0
columns = 2

[node name="LabelRenderMags" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option2"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Show or hide magazines after reloading."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Render mags"

[node name="CheckBoxRenderMags" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option2" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6
pressed = true

[node name="Option3" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 40.0
margin_right = 245.0
margin_bottom = 56.0
size_flags_horizontal = 3
size_flags_vertical = 5
columns = 2

[node name="LabelRenderBlood" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option3"]
margin_top = 1.0
margin_right = 120.0
margin_bottom = 14.0
hint_tooltip = "Show or hide blood effects."
mouse_filter = 0
size_flags_horizontal = 3
text = "Render blood"

[node name="CheckBoxRenderBlood" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option3" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6
pressed = true

[node name="Option4" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 60.0
margin_right = 245.0
margin_bottom = 76.0
columns = 2

[node name="LabelCorpseDecay" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option4"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Make corpses gradually disappear."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Corpses decay"

[node name="CheckBoxCorpseDecay" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option4" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6

[node name="Option5" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 80.0
margin_right = 245.0
margin_bottom = 96.0
columns = 2

[node name="LabelRenderMist" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option5"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Show or hide the mist effect on some levels."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Render mist"

[node name="CheckBoxRenderMist" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option5" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6
pressed = true

[node name="Option6" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 100.0
margin_right = 245.0
margin_bottom = 116.0
columns = 2

[node name="LabelRenderVignette" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option6"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Show or hide darker edges around the screen."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Render vignette"

[node name="CheckBoxRenderVignette" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option6" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6
pressed = true

[node name="Option7" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer"]
margin_top = 120.0
margin_right = 245.0
margin_bottom = 136.0
columns = 2

[node name="LabelRenderNoise" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option7"]
margin_right = 120.0
margin_bottom = 16.0
hint_tooltip = "Show or hide the grainy effect."
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 5
text = "Render Noise"

[node name="CheckBoxRenderNoise" type="CheckBox" parent="ActiveMenu/OptionsMenu/TabContainer/Graphics/ScrollContainer/VBoxContainer/Option7" groups=["ui_checkbox"]]
margin_left = 176.0
margin_right = 192.0
margin_bottom = 16.0
size_flags_horizontal = 6
pressed = true

[node name="Audio" type="Tabs" parent="ActiveMenu/OptionsMenu/TabContainer" groups=["ui_tab"]]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 31.0
margin_right = -4.0
margin_bottom = -4.0
focus_neighbour_bottom = NodePath("VBoxContainer/Option1/SliderMusic")
focus_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Audio"]
anchor_right = 1.0
anchor_bottom = 1.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Option1" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer"]
margin_top = 14.0
margin_right = 257.0
margin_bottom = 30.0
columns = 2

[node name="LabelMusic" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option1"]
margin_top = 1.0
margin_right = 126.0
margin_bottom = 14.0
hint_tooltip = "Controls the music's volume."
mouse_filter = 0
size_flags_horizontal = 3
text = "Music volume"

[node name="SliderMusic" type="HSlider" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option1"]
margin_left = 130.0
margin_right = 256.0
margin_bottom = 16.0
focus_neighbour_top = NodePath("../../..")
size_flags_horizontal = 3
min_value = -10.0
max_value = 10.0
allow_lesser = true
tick_count = 10
ticks_on_borders = true

[node name="Option4" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer"]
margin_top = 34.0
margin_right = 257.0
margin_bottom = 50.0
columns = 2

[node name="LabelSound" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option4"]
margin_top = 1.0
margin_right = 126.0
margin_bottom = 14.0
hint_tooltip = "Controls the overall sound of the game."
mouse_filter = 0
size_flags_horizontal = 3
text = "Sound volume"

[node name="SliderSound" type="HSlider" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option4"]
margin_left = 130.0
margin_right = 256.0
margin_bottom = 16.0
size_flags_horizontal = 3
min_value = -10.0
max_value = 10.0
tick_count = 10
ticks_on_borders = true

[node name="Option2" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer"]
margin_top = 54.0
margin_right = 257.0
margin_bottom = 70.0
columns = 2

[node name="LabelPlayerFootsteps" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option2"]
margin_top = 1.0
margin_right = 126.0
margin_bottom = 14.0
hint_tooltip = "Controls the volume of the footsteps of the player."
mouse_filter = 0
size_flags_horizontal = 3
text = "Player footsteps"

[node name="SliderPlayerFootsteps" type="HSlider" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option2"]
margin_left = 130.0
margin_right = 256.0
margin_bottom = 16.0
size_flags_horizontal = 3
min_value = -10.0
max_value = 10.0
tick_count = 10
ticks_on_borders = true

[node name="Option3" type="GridContainer" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer"]
margin_top = 74.0
margin_right = 257.0
margin_bottom = 90.0
columns = 2

[node name="LabelZombieFootsteps" type="Label" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option3"]
margin_top = 1.0
margin_right = 126.0
margin_bottom = 14.0
hint_tooltip = "Controls the volume of the footsteps of the zombies."
mouse_filter = 0
size_flags_horizontal = 3
text = "Zombie footsteps"

[node name="SliderZombieFootsteps" type="HSlider" parent="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option3"]
margin_left = 130.0
margin_right = 256.0
margin_bottom = 16.0
size_flags_horizontal = 3
min_value = -10.0
max_value = 10.0
tick_count = 10
ticks_on_borders = true

[node name="HBoxContainer" type="HBoxContainer" parent="ActiveMenu/OptionsMenu"]
anchor_left = 0.096875
anchor_top = 0.861111
anchor_right = 0.4
anchor_bottom = 0.966667
custom_constants/separation = 14
alignment = 1
__meta__ = {
"_edit_use_anchors_": true
}

[node name="ButtonSave" type="Button" parent="ActiveMenu/OptionsMenu/HBoxContainer" groups=["ui_mouse_entered"]]
margin_left = 8.0
margin_right = 36.0
margin_bottom = 19.0
text = "Save"
__meta__ = {
"_edit_use_anchors_": true
}

[node name="ButtonCancel" type="Button" parent="ActiveMenu/OptionsMenu/HBoxContainer" groups=["ui_mouse_entered"]]
margin_left = 50.0
margin_right = 88.0
margin_bottom = 19.0
text = "Cancel"
__meta__ = {
"_edit_use_anchors_": true
}

[node name="CreditsMenu" type="Panel" parent="ActiveMenu"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
custom_styles/panel = SubResource( 14 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="ActiveMenu/CreditsMenu"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer" type="MarginContainer" parent="ActiveMenu/CreditsMenu"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="ActiveMenu/CreditsMenu/MarginContainer"]
margin_right = 320.0
margin_bottom = 180.0

[node name="RichTextLabel" type="RichTextLabel" parent="ActiveMenu/CreditsMenu/MarginContainer/ScrollContainer"]
margin_right = 320.0
margin_bottom = 180.0
size_flags_horizontal = 3
custom_constants/line_separation = -4
bbcode_enabled = true
bbcode_text = "[center]

Programming:

[color=red]Pablo Da Costa Leite[/color]

Game Design:

[color=red]Pablo Da Costa Leite[/color]
[color=red]Thomas Finholm[/color]

Graphics:

[color=red]Thomas Finholm[/color]

Music & sound design:

[color=red]Migue Gessaghi[/color]

[/center]"
meta_underlined = false
text = "

Programming:

Pablo Da Costa Leite

Game Design:

Pablo Da Costa Leite
Thomas Finholm

Graphics:

Thomas Finholm

Music & sound design:

Migue Gessaghi

"
fit_content_height = true
scroll_following = true

[node name="MusicMenu" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 9 )
autoplay = true

[node name="SoundUI" type="AudioStreamPlayer" parent="."]
script = SubResource( 7 )

[node name="SoundSliders" type="AudioStreamPlayer" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = -1

[node name="Graphics" type="Control" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="CanvasLayer/Graphics"]
visible = false
modulate = Color( 1, 1, 1, 0.192157 )
material = SubResource( 29 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}

[node name="Background" type="TextureRect" parent="CanvasLayer/Graphics"]
self_modulate = Color( 1, 1, 1, 0 )
show_behind_parent = true
light_mask = 0
material = SubResource( 26 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 960.0
margin_bottom = 540.0
mouse_filter = 2
texture = ExtResource( 3 )
expand = true
stretch_mode = 4

[node name="TitleLogo" type="TextureRect" parent="CanvasLayer/Graphics"]
material = SubResource( 31 )
anchor_top = 0.133333
anchor_right = 1.0
anchor_bottom = 0.355556
mouse_filter = 2
texture = ExtResource( 5 )
expand = true
stretch_mode = 6

[node name="Banner" type="Panel" parent="CanvasLayer/Graphics"]
anchor_left = 0.3375
anchor_top = 0.372222
anchor_right = 0.6625
anchor_bottom = 0.461111
rect_pivot_offset = Vector2( -52, -95.9999 )
custom_styles/panel = SubResource( 8 )
__meta__ = {
"_edit_use_anchors_": true
}

[node name="RichTextLabel" type="RichTextLabel" parent="CanvasLayer/Graphics/Banner"]
anchor_top = 2.98023e-07
anchor_right = 1.0
anchor_bottom = 0.999996
custom_fonts/normal_font = ExtResource( 7 )
bbcode_enabled = true
bbcode_text = "[center]ALL HOPE IS [color=red]DEATH[/color][/center]"
text = "ALL HOPE IS DEATH"
fit_content_height = true
scroll_active = false
__meta__ = {
"_edit_use_anchors_": true
}

[node name="CanvasLayer_SplashScreen" type="CanvasLayer" parent="."]

[node name="SplashScreen" parent="CanvasLayer_SplashScreen" instance=ExtResource( 1 )]
visible = false

[node name="Progress" type="ProgressBar" parent="CanvasLayer_SplashScreen"]
visible = false
anchor_left = 0.278125
anchor_top = 0.661111
anchor_right = 0.71875
anchor_bottom = 0.733333
margin_top = -20.0
margin_bottom = -20.0
max_value = 1.0
__meta__ = {
"_edit_use_anchors_": true
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "intro"
anims/RESET = SubResource( 10 )
anims/intro = SubResource( 11 )
anims/menu_credits = SubResource( 15 )
anims/menu_main = SubResource( 13 )
anims/menu_options = SubResource( 12 )

[node name="AnimationPlayerBackground" type="AnimationPlayer" parent="."]
autoplay = "slide_1"
anims/RESET = SubResource( 16 )
anims/slide_1 = SubResource( 17 )
anims/slide_2 = SubResource( 18 )
anims/slide_3 = SubResource( 19 )
anims/slide_4 = SubResource( 20 )
anims/slide_5 = SubResource( 21 )
anims/slide_6 = SubResource( 22 )

[connection signal="visibility_changed" from="ActiveMenu/MainMenu" to="ActiveMenu/MainMenu" method="_on_MainMenu_visibility_changed"]
[connection signal="button_up" from="ActiveMenu/MainMenu/CenterContainer/VBoxContainer/ButtonNew" to="." method="_on_ButtonNew_button_up"]
[connection signal="button_up" from="ActiveMenu/MainMenu/CenterContainer/VBoxContainer/ButtonOptions" to="." method="_on_ButtonOptions_button_up"]
[connection signal="button_up" from="ActiveMenu/MainMenu/CenterContainer/VBoxContainer/ButtonCredits" to="." method="_on_ButtonCredits_button_up"]
[connection signal="button_up" from="ActiveMenu/MainMenu/CenterContainer/VBoxContainer/ButtonExit" to="." method="_on_ButtonExit_button_up"]
[connection signal="visibility_changed" from="ActiveMenu/OptionsMenu" to="ActiveMenu/OptionsMenu" method="_on_OptionsMenu_visibility_changed"]
[connection signal="focus_entered" from="ActiveMenu/OptionsMenu/TabContainer" to="ActiveMenu/OptionsMenu" method="_on_TabContainer_focus_entered"]
[connection signal="tab_changed" from="ActiveMenu/OptionsMenu/TabContainer" to="SoundUI" method="_on_TabContainer_tab_changed"]
[connection signal="focus_entered" from="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid/OptionsDifficulty" to="." method="_on_OptionsDifficulty_focus_entered"]
[connection signal="item_selected" from="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid/OptionsDifficulty" to="." method="_on_OptionsDifficulty_item_selected"]
[connection signal="item_selected" from="ActiveMenu/OptionsMenu/TabContainer/Gameplay/Grid/OptionsDifficulty" to="SoundUI" method="_on_OptionsDifficulty_item_selected"]
[connection signal="value_changed" from="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option1/SliderMusic" to="SoundUI" method="_on_SliderMusic_value_changed"]
[connection signal="value_changed" from="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option4/SliderSound" to="SoundUI" method="_on_SliderSound_value_changed"]
[connection signal="value_changed" from="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option2/SliderPlayerFootsteps" to="SoundUI" method="_on_SliderPlayerFootsteps_value_changed"]
[connection signal="value_changed" from="ActiveMenu/OptionsMenu/TabContainer/Audio/VBoxContainer/Option3/SliderZombieFootsteps" to="SoundUI" method="_on_SliderZombieFootsteps_value_changed"]
[connection signal="button_up" from="ActiveMenu/OptionsMenu/HBoxContainer/ButtonSave" to="." method="_on_ButtonSave_button_up"]
[connection signal="button_up" from="ActiveMenu/OptionsMenu/HBoxContainer/ButtonSave" to="SoundUI" method="_on_ButtonSave_button_up"]
[connection signal="button_up" from="ActiveMenu/OptionsMenu/HBoxContainer/ButtonCancel" to="." method="_on_ButtonCancel_button_up"]
[connection signal="button_up" from="ActiveMenu/OptionsMenu/HBoxContainer/ButtonCancel" to="SoundUI" method="_on_ButtonCancel_button_up"]
